#pragma once
#include <iostream>

/*
Тема: Указатель this. Побитовое копирование. Конст-руктор копирования.

Задание.

Создайте программу, имитирующую многоквартирный дом. Необходимо иметь классы “Человек”, “Квартира”, “Дом” . 
Класс “Квартира” содержит динамический массив объектов класса “Человек” . Класс “Дом” содержит массив объектов класса “Квартира” .

Каждый из классов содержит переменные-члены и функ-ции-члены, которые необходимы для предметной области класса. 
Обращаем ваше внимание, что память под стро-ковые значения выделяется динамически. Например, для ФИО в классе “Человек” . 
Не забывайте обеспечить классы различными конструкторами (конструктор копирования обязателен), деструкторами. В main протестировать ра-боту полученного набора классов.
*/

/*
Для теста будет сделан дом из 3 этажей, 5 квартир на каждом этаже (2 однушки, 2 двушки и 1 трешка). 

Попробовать реализовать ограничения по количеству персон в квартире
В однушке может проживат до 2 взрослых от 18 лет и один ребенок до 20 лет.
В двушке может жить до 2 взрослых от 18 лет и 2 ребенка до 20 лет.
в трешке может жить до 3 взрослых и до 4 детей, но неболее 6 человек в сумме.
*/

class Person
{
	char* firstname{};
	char* lastname{};
	signed int age{};

public:

};

class Apartment
{
	signed int appartNumber{}; // номер квартиры надо сделать уникальным при создании
	signed int room{}; // количество комнат
	Person* person{};

public:

};

class Home
{
	int floor{};
	Apartment* apartment{};

public:

};